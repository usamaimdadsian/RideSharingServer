import { Request, Response } from 'express';

import {Controller} from '@/components';
import { <model_name> } from './<model_name>';
import { <validation_name> } from './<validation_name>';
import { HttpStatus, response } from '@/utils';

export class <controller_name> extends Controller{

    public index(req: Request, res: Response) {
        // Logic to fetch all users from the database
        const users: <model_name>[] = [
            { id: 1, name: 'John Doe' },
            { id: 2, name: 'Jane Smith' },
        ];

        response(HttpStatus.OK,res,users)
    }

    public show(req: Request, res: Response) {
        const id = parseInt(req.params.id, 10);

        // Logic to fetch user by ID from the database
        const user: <model_name> | undefined = { id: 1, name: 'John Doe' };

        if (user) {
            response(HttpStatus.OK,res,user)
        } else {
            response(HttpStatus.NO_CONTENT,res)
        }
    }

    public create(req: Request, res: Response) {
        const { name } = req.body;

        <validation_name>.validate(req.body)

        // Logic to create a new user in the database
        const newUser: <model_name> = { id: 1, name };

        response(HttpStatus.CREATED,res,newUser)
    }

    public update(req: Request, res: Response) {
        const id = parseInt(req.params.id, 10);
        const { name } = req.body;

        // Logic to update the user in the database
        const updatedUser: <model_name> | undefined = { id, name };

        if (updatedUser) {
            response(HttpStatus.OK,res,updatedUser)
        } else {
            response(HttpStatus.NOT_FOUND,res)
        }
    }

    public delete(req: Request, res: Response) {
        const id = parseInt(req.params.id, 10);

        // Logic to delete the user from the database
        // ...

        response(HttpStatus.OK,res)
    }
}
